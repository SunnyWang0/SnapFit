Create a backend endpoint on Cloudflare

- Whenever a user takes a photo, send the photo to the backend endpoint
- Backend endpoint sends the photo to GPT
- Get a response from the model
- Returns the response to the user

In order to enhance backend authentication:

1. User-Based Authentication:
- When a user first installs and opens the app, generate a unique device identifier
- Make an initial registration request to your Cloudflare Worker
- The Worker generates a unique API key for this device/user
- Store this API key securely in the iOS Keychain

2. Request Signing Process:

   Request Structure:
   - API Key (identifies the user)
   - Timestamp (prevents replay attacks)
   - Request ID (unique per request)
   - Signature (HMAC of the request payload)

3. Validation Layer:

- Cloudflare Worker maintains a database (e.g., KV store) of valid API keys
- Each request is validated by:
    1. Checking if the API key exists and is active
    2. Verifying the timestamp is within an acceptable window (e.g., 5 minutes)
    3. Ensuring the Request ID hasn't been used before (prevent duplicates)
    4. Validating the request signature

4. Rate Limiting:
- Implement per-user rate limits (e.g., max 10 requests per hour)
- Store usage metrics in Cloudflare KV
- Consider implementing a paid tier for higher limits


In order to limit the amount of requests:
- Add count on user side for amount of photos taken